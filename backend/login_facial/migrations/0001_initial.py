# Generated by Django 5.2.7 on 2025-10-25 10:39

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(help_text='Documento de identidad', max_length=8, unique=True)),
                ('nombres', models.CharField(max_length=80)),
                ('apellidos', models.CharField(max_length=120)),
                ('rol', models.CharField(choices=[('Administrador', 'Administrador'), ('Analista', 'Analista')], default='Analista', max_length=20)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
                ('face_registered', models.BooleanField(default=False, help_text='Indica si el usuario tiene registro facial')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('username', models.CharField(blank=True, max_length=150, unique=True)),
                ('email', models.EmailField(max_length=120, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'registro_usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DatosFaciales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embeddings', models.JSONField(help_text='Lista de embeddings faciales del usuario (múltiples muestras)')),
                ('posiciones', models.JSONField(help_text='Lista de posiciones faciales correspondientes a los embeddings')),
                ('num_muestras', models.IntegerField(default=0)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('activo', models.BooleanField(default=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='datos_faciales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Datos Faciales',
                'verbose_name_plural': 'Datos Faciales',
                'db_table': 'datos_faciales',
            },
        ),
        migrations.CreateModel(
            name='SesionFacial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resultado', models.CharField(choices=[('exitoso', 'Exitoso'), ('fallido', 'Fallido'), ('error', 'Error')], max_length=10)),
                ('confianza', models.FloatField(blank=True, help_text='Nivel de confianza del reconocimiento', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('detalles', models.JSONField(blank=True, help_text='Detalles adicionales del intento', null=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sesiones_faciales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesión Facial',
                'verbose_name_plural': 'Sesiones Faciales',
                'db_table': 'sesiones_faciales',
                'ordering': ['-timestamp'],
            },
        ),
    ]
